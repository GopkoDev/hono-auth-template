// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String         @id @default(cuid())
  name             String?
  email            String?        @unique
  photoUrl         String?        @map("photo_url")
  password         String?
  emailVerified    DateTime?      @map("email_verified")
  refreshTokens    RefreshToken[]
  twoFactorEnabled Boolean        @default(false)
  twoFactorSecret  String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model RefreshToken {
  id        String   @id @default(uuid())
  token     String   @unique
  userId    String
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("refresh_tokens")
}

enum EmailVerificationType {
  REGISTRATION
  EMAIL_CHANGE
}

model EmailVerificationToken {
  id        String                @id @default(cuid())
  email     String
  token     String                @unique
  pin       String
  type      EmailVerificationType
  expiresAt DateTime

  createdAt DateTime @default(now())

  @@unique([email, token])
  @@map("email_verification_tokens")
}

model PasswordResetToken {
  id        String   @id @default(cuid())
  email     String
  token     String   @unique
  pin       String
  expiresAt DateTime
  createdAt DateTime @default(now())

  @@unique([email, token])
  @@map("password_reset_tokens")
}
